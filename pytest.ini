[pytest]
# Pytest configuration for Trusted Services

# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test paths
testpaths = tests

# Output options
addopts = 
    -v
    --tb=short
    --strict-markers
    --disable-warnings
    -ra

# Markers for organizing tests
markers =
    smoke: Smoke tests for critical functionality
    integration: Integration tests requiring multiple services
    unit: Unit tests for individual components
    slow: Tests that take a long time to run
    api: API endpoint tests
    frontend: Frontend UI tests
    requires_llm: Tests that require LLM service
    requires_db: Tests that require database

# Logging
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Coverage options (when running with --cov)
[coverage:run]
source = src
omit = 
    */tests/*
    */__pycache__/*
    */venv/*
    */.venv/*

[coverage:report]
precision = 2
show_missing = true
skip_covered = false

exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod

