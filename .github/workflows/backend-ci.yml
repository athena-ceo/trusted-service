name: Backend CI

on:
  push:
    branches: [main, develop]
    paths:
      - "src/**"
      - "requirements.txt"
      - "tests/**"
      - ".github/workflows/backend-ci.yml"
  pull_request:
    branches: [main, develop]
    paths:
      - "src/**"
      - "requirements.txt"
      - "tests/**"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff black isort mypy
          pip install -r requirements.txt

      - name: Run ruff (fast linter)
        run: ruff check src/ tests/
        continue-on-error: true

      - name: Check code formatting with black
        run: black --check src/ tests/
        continue-on-error: true

      - name: Check import sorting with isort
        run: isort --check-only src/ tests/
        continue-on-error: true

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov pytest-asyncio pytest-mock httpx

      - name: Run unit tests
        run: |
          pytest tests/unit/ -v --cov=src --cov-report=xml --cov-report=term

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: backend
          name: backend-coverage

  smoke-test:
    runs-on: ubuntu-latest
    needs: [test]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-asyncio httpx

      - name: Create test runtime config
        run: |
          mkdir -p runtime_test
          cp -r runtime/config_*.yaml runtime_test/ || true

      - name: Start backend server
        run: |
          python launcher_api.py ./runtime &
          echo $! > server.pid
          sleep 10
        env:
          TESTING: true

      - name: Run backend smoke tests only
        run: |
          pytest tests/smoke/test_backend_api.py -v --tb=short

      - name: Stop backend server
        if: always()
        run: |
          if [ -f server.pid ]; then
            kill $(cat server.pid) || true
          fi

  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install security tools
        run: |
          pip install bandit safety

      - name: Run bandit security scan
        run: bandit -r src/ -f json -o bandit-report.json
        continue-on-error: true

      - name: Check dependencies for vulnerabilities
        run: safety check --json
        continue-on-error: true

      - name: Upload security reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-reports
          path: |
            bandit-report.json
